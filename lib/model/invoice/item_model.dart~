class ItemModel {
  int itemId;
  String itemBarcode;
  String itemName;
  int categoryId;
  String categoryName;
  int salesTaxId;
  double salesTaxPercentage;
  int purchaseTaxId;
  double purchaseTaxPercentage;
  bool isTax;
  double salesPriceBeforeTax;
  double salesPriceAfterTax;
  int purchasePriceBeforeTax;
  int purchasePriceAfterTax;
  bool isNumber;
  bool isScaler;
  bool isScalerPerGrain;
  bool isDiscountable;
  bool isAdditions;
  bool? isHasAdditionMandatory;
  bool isHasOptions;
  bool isOptionsMandetory;
  bool? isItemOptions;
  int parentId;
  bool isMainItem;
  int qtyFactor;
  int? updateUserId;
  String updateUserName;
  DateTime? updateDate;
  bool? isProductions;
  int costCenterId;
  bool status;
  bool isShowInTablet;
  dynamic picture;

  ItemModel({
    required this.itemId,
    required this.itemBarcode,
    required this.itemName,
    required this.categoryId,
    required this.categoryName,
    required this.salesTaxId,
    required this.salesTaxPercentage,
    required this.purchaseTaxId,
    required this.purchaseTaxPercentage,
    required this.isTax,
    required this.salesPriceBeforeTax,
    required this.salesPriceAfterTax,
    required this.purchasePriceBeforeTax,
    required this.purchasePriceAfterTax,
    required this.isNumber,
    required this.isScaler,
    required this.isScalerPerGrain,
    required this.isDiscountable,
    required this.isAdditions,
    required this.isHasAdditionMandatory,
    required this.isHasOptions,
    required this.isOptionsMandetory,
    required this.isItemOptions,
    required this.parentId,
    required this.isMainItem,
    required this.qtyFactor,
    required this.updateUserId,
    required this.updateUserName,
    required this.updateDate,
    required this.isProductions,
    required this.costCenterId,
    required this.status,
    required this.isShowInTablet,
    required this.picture,
  });

  factory ItemModel.fromJson(Map<String, dynamic> json) => ItemModel(
        itemId: json["ItemID"],
        itemBarcode: json["ItemBarcode"],
        itemName: json["ItemName"],
        categoryId: json["CategoryID"],
        categoryName: json["CategoryName"],
        salesTaxId: json["SalesTaxID"],
        salesTaxPercentage: json["SalesTaxPercentage"],
        purchaseTaxId: json["PurchaseTaxID"],
        purchaseTaxPercentage: json["PurchaseTaxPercentage"],
        isTax: json["IsTax"],
        salesPriceBeforeTax: json["SalesPriceBeforeTax"]?.toDouble(),
        salesPriceAfterTax: json["SalesPriceAfterTax"]?.toDouble(),
        purchasePriceBeforeTax: json["PurchasePriceBeforeTax"],
        purchasePriceAfterTax: json["PurchasePriceAfterTax"],
        isNumber: json["IsNumber"],
        isScaler: json["IsScaler"],
        isScalerPerGrain: json["IsScalerPerGrain"],
        isDiscountable: json["IsDiscountable"],
        isAdditions: json["IsAdditions"],
        isHasAdditionMandatory: json["IsHasAdditionMandatory"],
        isHasOptions: json["IsHasOptions"],
        isOptionsMandetory: json["IsOptionsMandetory"],
        isItemOptions: json["IsItemOptions"],
        parentId: json["ParentID"],
        isMainItem: json["IsMainItem"],
        qtyFactor: json["QTYFactor"],
        updateUserId: json["UpdateUserID"],
        updateUserName: json["UpdateUserName"],
        updateDate: json["UpdateDate"] == null
            ? null
            : DateTime.parse(json["UpdateDate"]),
        isProductions: json["IsProductions"],
        costCenterId: json["CostCenterID"],
        status: json["Status"],
        isShowInTablet: json["IsShowInTablet"],
        picture: json["Picture"],
      );

  Map<String, dynamic> toJson() => {
        "ItemID": itemId,
        "ItemBarcode": itemBarcode,
        "ItemName": itemName,
        "CategoryID": categoryId,
        "CategoryName": categoryName,
        "SalesTaxID": salesTaxId,
        "SalesTaxPercentage": salesTaxPercentage,
        "PurchaseTaxID": purchaseTaxId,
        "PurchaseTaxPercentage": purchaseTaxPercentage,
        "IsTax": isTax,
        "SalesPriceBeforeTax": salesPriceBeforeTax,
        "SalesPriceAfterTax": salesPriceAfterTax,
        "PurchasePriceBeforeTax": purchasePriceBeforeTax,
        "PurchasePriceAfterTax": purchasePriceAfterTax,
        "IsNumber": isNumber,
        "IsScaler": isScaler,
        "IsScalerPerGrain": isScalerPerGrain,
        "IsDiscountable": isDiscountable,
        "IsAdditions": isAdditions,
        "IsHasAdditionMandatory": isHasAdditionMandatory,
        "IsHasOptions": isHasOptions,
        "IsOptionsMandetory": isOptionsMandetory,
        "IsItemOptions": isItemOptions,
        "ParentID": parentId,
        "IsMainItem": isMainItem,
        "QTYFactor": qtyFactor,
        "UpdateUserID": updateUserId,
        "UpdateUserName": updateUserName,
        "UpdateDate": updateDate?.toIso8601String(),
        "IsProductions": isProductions,
        "CostCenterID": costCenterId,
        "Status": status,
        "IsShowInTablet": isShowInTablet,
        "Picture": picture,
      };
}
